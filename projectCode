#include <SoftwareSerial.h>


const int HALL_pin = 3;
const int LOCK_pin = 4;
const int LED_pin = 5;
const int BUTTON1_pin = 6;
const int BUTTON2_pin = 7;

//1st RFID Receiver
const int RF1_RECEIVE_pin = 1;
const int RF1_TRANSMIT_pin = 2;
SoftwareSerial mySerial1(RF1_RECEIVE_pin, RF1_TRANSMIT_pin);

//2nd RFID Receiver
const int RF2_RECEIVE_pin = 10;
const int RF2_TRANSMIT_pin = 11;
SoftwareSerial mySerial2(RF2_RECEIVE_pin, RF2_TRANSMIT_pin);

int LOCK_STATE;
const int OPEN = 1; //For solenoid
const int CLOSED = 0; //For solenoid
const int ALIGNED = 0; //For Hall Sensor
const int NOTALIGNED = 1; //For Hall Sensor

int incomingByte = 0;
int teller = 0;

const int debounce_time = 1000;
const int open_time = 3000;
long startMillis;

void setup() {
  Serial.begin(9600);
  mySerial1.begin(9600);
  mySerial2.begin(9600);
  Serial.println("Hall, Solenoid and Button");
  pinMode(BUTTON1_pin, INPUT);
  pinMode(BUTTON2_pin, INPUT);
  pinMode(LED_pin, OUTPUT);
  pinMode(LOCK_pin, OUTPUT);
  digitalWrite(LOCK_pin, LOW);
  LOCK_STATE = CLOSED;
  digitalWrite(LED_pin, LOW);
}

void loop() {
  int tmp;
  byte valr;

  if (teller == 0)
  {
    teller = 1;
    printvars();
  }

  if (RFID1() == 2)
  {
    Serial.println("No Access");
    while (mySerial1.available());
    valr = mySerial1.read();
  }
  if (RFID2() == 2)
  {
   Serial.println("No Access");
     while (mySerial2.available());
    valr = mySerial2.read();
  }
  
  if (RFID1() == 3)
  {
   printvars();
    Serial.println("unlocking the door...");
    if(LOCK_STATE==CLOSED)
    {
      digitalWrite(LOCK_pin, HIGH);
      LOCK_STATE=OPEN;
      digitalWrite(LED_pin, HIGH);
      printvars();
    }
    
    while(mySerial1.available())
      valr = mySerial1.read();
    
    startMillis = millis():
    Serial.println("Starting Timer")
      while(millis()-startMillis<open_time)
    {
     if(RFID1() == 3)
     {
      Serial.println("RFID: reset timer")
        startMillis = millis();
       while(mySerial.available())
         valr = mySerial1.read();
     }
      if(digitalRead(HALL_pin)==NOTALIGNED)
      {
       Serial.println("Hall Sensor. Cut timer");
        break;
      }
      
      if(RFID1() == 2)
      {
       Serial.println("Other Cat Present");
        if(digitalRead(HALL_pin)==ALIGNED)
        {
         startMillis = millis();
          Serial.println("debouncing");
          while(millis()-startMillis<debounce_time)
          {
            if(digitalRead(HALL_pin)--NOTALIGNED)
            {
              printvars();
              startMillis = millis();
            }
          }
          Serial.println("locking door");
          digitalWrite(LOCK_pin, LOW);
          digitalWrite(LED_pin, LOW);
          LOCK_STATE=CLOSED;
          delay(500);
        }
        
      }
    }
     printvars();
    
    while(LOCK_STATE==OPEN)
    {
      if(digitalRead(HALL_pin)==ALIGNED)
      {
        startMillis = millis();
        Serial.println("debouncing");
        while(millis()-startMillis<debouncing_time)
        {if(digitalRead(Hall_pin)==NOTALIGNED
            {printvars();
             startMillis = millis();
            }
        }
            Serial.println("Locking door");
            digitalWrite(LOCK_pin, LOW);
            LOCK_STATE=CLOSED;
            delay(500);
            }
            
            }
            }
            printvars();
            
            while(LOCK_STATE==OPEN)
            {
              if(digitalRead(HALL_pin)==ALIGNED)
              {
                startMillis = millis();
                Serial.println("debouncing");
                while(millis()-startMillis<debounce_time)
                {if(digitalRead(HALL_pin)==NOTALIGNED)
                {
                  printvars();
                  startMillis = millis();
                }
                }
                Serial.println("Locking door");
                digitalWrite(LOCK_pin, LOW);
                LOCK_STATE=CLOSED
                  delay(500)
              }
            }
            printvars();
            while(mySerial1.available())
            valr = mySerial1.read();
            }
            // end of if(RFID1()==3)
            
  if(RFID2() == 3)
  {
  printvars();  
  Serial.println("unlocking the door ...");  
  if((LOCK_STATE==CLOSED)
    {
    digitalWrite(LOCK_pin, HIGH);
   LOCK_STATE=OPEN; 
    digitalWrite(LED_pin, HIGH);
    printvars();
    }
    
  while(mySerial2.available())
  valr = mySerial2.read();
  
  startMillis = millis();
  Serial.println("starting timer ...");
  while(millis()-startMillis<open_time) 
    {
     
       
    if(RFID2() == 3)
      {
      Serial.println("RFID2: reset timer ...");
      startMillis = millis();
      while(mySerial2.available())
      valr = mySerial2.read();
      }  
        
    if(digitalRead(HALL_pin)==NOTALIGNED)
     {    
      Serial.println("Hall sensor: end timer ...");
      break;
      }

    if(RFID2() == 2)
      {    
      Serial.println("RFID2: other cat! ");
      if(digitalRead(HALL_pin)==ALIGNED)
      {
         startMillis = millis();
         Serial.println("debouncing ...");
         while(millis()-startMillis<debounce_time) 
           {
           if(digitalRead(HALL_pin)==NOTALIGNED) 
              { 
              printvars();
              startMillis = millis();
              }
           }
         
         Serial.println("locking door ...");
         digitalWrite(LOCK_pin, LOW);
         digitalWrite(OPENLED_pin, LOW);  
         LOCK_STATE=CLOSED;      
         delay(500);
         }
      
      }
    }
  printvars();
      

  while(LOCK_STATE==OPEN)
    {
    if(digitalRead(HALL_pin)==ALIGNED)
    {
       startMillis = millis();
       Serial.println("debouncing ...");
       while(millis()-startMillis<debounce_time) 
         {
         if(digitalRead(HALL_pin)==NOTALIGNED) 
            { 
            printvars();
            startMillis = millis();
            }
         }
       Serial.println("locking door ...");
       digitalWrite(SOLENOID2_pin, LOW);
       digitalWrite(OPENLED_pin, LOW);  
       SOLENOID2_STATE=CLOSED;      
       delay(500);
       }
    }
  printvars(); 
  while(mySerial2.available())
  valr = mySerial2.read();  
  }
//end of if(RFID2() == 3)

            
}

void printvars()
{
  Serial.print("HALL: ");
  if (digitalRead(HALL_pin) == ALIGNED)
    Serial.print("ALIGNED");
  else
    Serial.print("NOTALIGNED");

  Serial.print(", SOLENOID1: ");
  if (LOCK_STATE == OPEN)
    Serial.print("OPEN");
  else
    Serial.print("CLOSED");
  Serial.println(" ");
}

int RFID1() {
  byte i = 0;
  byte val = 0;
  byte code[6];
  byte goodcode[6] = {0x8C, 0, 0x81, 0xB8, 0x73}; //enter hex for good RFID tag
  byte badcode [6] = {0xE1, 0, 0x3B, 0x9B, 0x2D}; //enter hex for bad RFID tag
  byte checksum = 0;
  byte bytesread = 0;
  byte tempbyte = 0;
  int result = 0;
  int cnt_good = 0;
  int cnt_bad = 0;

  if (mySerial1.available())
  {
    result = 1;
    if ((val = mySerial1.read()) == 0x02)
    {
      bytesread = 0;
      Serial.println("I read it");
      while (bytesread < 12)
      { 
        if (mySerial1.available())
        {
          val = mySerial1.read();
          if ((val == 0x0D) || (val == 0x0A) || (val == 0x03) || (val == 0x02))
          {
            break; 
          }

         
          if ((val >= '0') && (val <= '9'))
          {
            val = val - '0';
          }
          else if ((val >= 'A') && (val <= 'F'))
          {
            val = 10 + val - 'A';
          }

         
          if (bytesread & 1 == 1)
          {
            
            code[bytesread >> 1] = (val | (tempbyte << 4));

            if (bytesread >> 1 != 5)
            { 
              checksum ^= code[bytesread >> 1];
            }
          }
          else
          {
            tempbyte = val; 
          }
          bytesread++; 
        }
      }

      

      if (bytesread == 12)
      { 
        Serial.print("5-byte code: ");

        for (i = 0; i < 5; i++)
        {
          if (code[i] < 16) mySerial1.print("0");
          Serial.print(code[i], HEX);
          Serial.print(" ");
          if (code[i] == goodcode[i])
            cnt_good += 1;
          if (code[i] == badcode[i])
            cnt_bad += 1;
        }

        Serial.println(" ");
        Serial.println(cnt_good);
        Serial.println(cnt_bad);
        if (cnt_good == 5)
        {
          return 3;
        }
        if (cnt_bad == 5)
        {
          return 2;
        }
        if ((cnt_good != 5) && (cnt_bad != 5))
        {
          return 0;
        }
        Serial.println(result);

        Serial.println();
        Serial.print("Checksum: ");
        Serial.print(code[5], HEX);
        Serial.println(code[5] == checksum ? " -- passed." : " -- error.");

        Serial.println();
      }
      bytesread = 0;
    }
  }
  return result;
}

int RFID2() 
{
  byte i = 0;
  byte val = 0;
  byte code[6];
  byte goodcode[6] = {0x8C, 0, 0x81, 0xB8, 0x73}; //enter hex for good RFID tag
  byte badcode [6] = {0xE1, 0, 0x3B, 0x9B, 0x2D}; //enter hex for bad RFID tag
  byte checksum = 0;
  byte bytesread = 0;
  byte tempbyte = 0;
  int result = 0;
  int cnt_good=0;
  int cnt_bad=0;
        
  if(mySerial2.available()) 
  {
    result=1;
    if((val = mySerial2.read()) == 0x02) 
    { 
      bytesread = 0; 
      Serial.println("I read it");
      while (bytesread < 12) 
      {
        if(mySerial2.available()) 
        { 
          val = mySerial2.read();
          if((val == 0x0D)||(val == 0x0A)||(val == 0x03)||(val == 0x02)) 
          {  
            break; 
          }

        
          if ((val >= '0') && (val <= '9')) 
          {
            val = val - '0';
          } 
          else if ((val >= 'A') && (val <= 'F')) 
          {
            val = 10 + val - 'A';
          }

          if (bytesread & 1 == 1) 
          {
          
            code[bytesread >> 1] = (val | (tempbyte << 4));

            if (bytesread >> 1 != 5) 
            {
              checksum ^= code[bytesread >> 1];
            }
          } 
          else 
          {
            tempbyte = val; // Store the first hex digit first...
          }
          bytesread++; // ready to read next digit
        } 
      } 

     

      if (bytesread == 12) 
      {  // if 12 digit read is complete
      Serial.print("5-byte code: ");

        for (i=0; i<5; i++) 
        {
          if (code[i] < 16) mySerial2.print("0");
          Serial.print(code[i], HEX);
          Serial.print(" ");
          if(code[i]==goodcode[i])
          cnt_good+=1;
          if(code[i]==badcode[i])
          cnt_bad+=1;          
        }
          
        Serial.println(" ");  
        Serial.println(cnt_good);  
        Serial.println(cnt_bad);
        if(cnt_good==5)  
        {
          return 3;
        }
        if(cnt_bad==5) 
        { 
        return 2;
        }
        if((cnt_good!=5) && (cnt_bad!=5))
        {
        return 0;
        }        
       Serial.println(result);
       
        Serial.println();
        Serial.print("Checksum: ");
        Serial.print(code[5], HEX);
        Serial.println(code[5] == checksum ? " -- passed." : " -- error.");
        
        Serial.println();
      }
      bytesread = 0;
    }
  }
  return result;
}
